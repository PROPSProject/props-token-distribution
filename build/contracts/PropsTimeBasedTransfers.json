{
  "contractName": "PropsTimeBasedTransfers",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "canTransferBeforeStartTime",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transfersStartTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "start",
          "type": "uint256"
        },
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canTransferBeforeStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"start\",\"type\":\"uint256\"},{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract allows to set a transfer start time (unix timestamp) from which transfers are allowed excluding one address defined in initialize*\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"initialize(uint256,address)\":{\"details\":\"The initializer function, with transfers start time `transfersStartTime` (unix timestamp) and `canTransferBeforeStartTime` address which is exempt from start time restrictions\",\"params\":{\"account\":\"uint256 address exempt from the start date check\",\"start\":\"uint Unix timestamp of when transfers can start\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address if allowed\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another if allowed Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Props Time Based Transfers\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/jretina/Programming/props/props-token-distribution/contracts/token/PropsTimeBasedTransfers.sol\":\"PropsTimeBasedTransfers\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jretina/Programming/props/props-token-distribution/contracts/token/PropsTimeBasedTransfers.sol\":{\"keccak256\":\"0x7248181b542d0c11324defb2ed824f6fe5f30d2066deeb3a72264baae12dfbbf\",\"urls\":[\"bzzr://792bfc89782f2c7a2d02e80bd182f607919e8fc8c5cb0b32d30c26a750d45e34\"]},\"openzeppelin-eth/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-eth/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfb19ee60e5ed94cef3daefc3c648c1e0053493e2d8372ad073acfd9602792ee6\",\"urls\":[\"bzzr://8c104e146c3d55255f9d3c7c6759ee71a522ec820991cefa2323c8ed223b8f2f\"]},\"openzeppelin-eth/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]},\"zos-lib/contracts/Initializable.sol\":{\"keccak256\":\"0xac4cc87395794e21e95549a1b4002881621d59878c4129d534a0089ce5cf7212\",\"urls\":[\"bzzr://1725ac3e1941f8e2bf5c1966abd66bd744d40c85ae8195eb697ec3256bc1fc39\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100b457806318160ddd1461012757806323b872dd1461015257806339509351146101e557806345b6d7dc1461025857806370a08231146102af578063a457c2d714610314578063a9059cbb14610387578063d0f22e9c146103fa578063da35a26f14610425578063dd62ed3e14610480575b600080fd5b3480156100c057600080fd5b5061010d600480360360408110156100d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610505565b604051808215151515815260200191505060405180910390f35b34801561013357600080fd5b5061013c610557565b6040518082815260200191505060405180910390f35b34801561015e57600080fd5b506101cb6004803603606081101561017557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610561565b604051808215151515815260200191505060405180910390f35b3480156101f157600080fd5b5061023e6004803603604081101561020857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610670565b604051808215151515815260200191505060405180910390f35b34801561026457600080fd5b5061026d610715565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102bb57600080fd5b506102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061073b565b6040518082815260200191505060405180910390f35b34801561032057600080fd5b5061036d6004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610784565b604051808215151515815260200191505060405180910390f35b34801561039357600080fd5b506103e0600480360360408110156103aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610829565b604051808215151515815260200191505060405180910390f35b34801561040657600080fd5b5061040f610936565b6040518082815260200191505060405180910390f35b34801561043157600080fd5b5061047e6004803603604081101561044857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061093c565b005b34801561048c57600080fd5b506104ef600480360360408110156104a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610abb565b6040518082815260200191505060405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561054257600080fd5b61054d338484610b42565b6001905092915050565b6000603554905090565b6000836068544211806105c15750606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b151561065b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d8152602001807f43616e6e6f74207472616e73666572206265666f7265207472616e736665727381526020017f2073746172742074696d652066726f6d2074686973206163636f756e7400000081525060400191505060405180910390fd5b610666858585610ca5565b9150509392505050565b600061070b338461070685603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d5690919063ffffffff16565b610b42565b6001905092915050565b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061081f338461081a85603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7790919063ffffffff16565b610b42565b6001905092915050565b6000336068544211806108895750606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b1515610923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d8152602001807f43616e6e6f74207472616e73666572206265666f7265207472616e736665727381526020017f2073746172742074696d652066726f6d2074686973206163636f756e7400000081525060400191505060405180910390fd5b61092d8484610d99565b91505092915050565b60685481565b600060019054906101000a900460ff168061095b575061095a610db0565b5b8061097257506000809054906101000a900460ff16155b1515610a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055508260688190555081606960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff021916908315150217905550505050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610b7e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610bba57600080fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000610cb2848484610dc1565b610d4b8433610d4685603460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7790919063ffffffff16565b610b42565b600190509392505050565b6000808284019050838110151515610d6d57600080fd5b8091505092915050565b6000828211151515610d8857600080fd5b600082840390508091505092915050565b6000610da6338484610dc1565b6001905092915050565b600080303b90506000811491505090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610dfd57600080fd5b610e4f81603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7790919063ffffffff16565b603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ee481603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d5690919063ffffffff16565b603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505056fea165627a7a7230582094e73c7bc362f3f772f34da959ede17c7d7852f912319ed4b9dd0aaabafeb06c0029",
  "sourceMap": "324:2017:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;324:2017:4;;;;;;;",
  "deployedSourceMap": "324:2017:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:185:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2796:185:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2796:185:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;997:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;997:89:8;;;;;;;;;;;;;;;;;;;;;;;2119:220:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2119:220:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2119:220:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4171:200:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4171:200:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4171:200:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:41:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;426:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1295:104:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1295:104:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1295:104:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4879:210;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4879:210:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4879:210:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1456:190:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1456:190:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1456:190:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;387:33:4;;;;;;;;;;;;;;;;;;;;;;;1080:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1080:202:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1080:202:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1730:129:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1730:129:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1730:129:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:185;2861:4;2904:1;2885:21;;:7;:21;;;;2877:30;;;;;;;;2917:36;2926:10;2938:7;2947:5;2917:8;:36::i;:::-;2970:4;2963:11;;2796:185;;;;:::o;997:89::-;1041:7;1067:12;;1060:19;;997:89;:::o;2119:220:4:-;2270:4;2247;554:18;;548:3;:24;:76;;;;598:26;;;;;;;;;;;588:36;;:8;:36;;;548:76;527:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2297:35;2316:4;2322:2;2326:5;2297:18;:35::i;:::-;2290:42;;2119:220;;;;;;:::o;4171:200:8:-;4251:4;4267:76;4276:10;4288:7;4297:45;4331:10;4297:8;:20;4306:10;4297:20;;;;;;;;;;;;;;;:29;4318:7;4297:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4267:8;:76::i;:::-;4360:4;4353:11;;4171:200;;;;:::o;426:41:4:-;;;;;;;;;;;;;:::o;1295:104:8:-;1350:7;1376:9;:16;1386:5;1376:16;;;;;;;;;;;;;;;;1369:23;;1295:104;;;:::o;4879:210::-;4964:4;4980:81;4989:10;5001:7;5010:50;5044:15;5010:8;:20;5019:10;5010:20;;;;;;;;;;;;;;;:29;5031:7;5010:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4980:8;:81::i;:::-;5078:4;5071:11;;4879:210;;;;:::o;1456:190:4:-;1587:4;1558:10;554:18;;548:3;:24;:76;;;;598:26;;;;;;;;;;;588:36;;:8;:36;;;548:76;527:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1614:25;1629:2;1633:5;1614:14;:25::i;:::-;1607:32;;1456:190;;;;;:::o;387:33::-;;;;:::o;1080:202::-;1024:12:11;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1224:5:4;1203:18;:26;;;;1268:7;1239:26;;:36;;;;;;;;;;;;;;;;;;1243:15:11;1228:12;;:30;;;;;;;;;;;;;;;;;;1080:202:4;;;:::o;1730:129:8:-;1802:7;1828:8;:15;1837:5;1828:15;;;;;;;;;;;;;;;:24;1844:7;1828:24;;;;;;;;;;;;;;;;1821:31;;1730:129;;;;:::o;6916:248::-;7027:1;7008:21;;:7;:21;;;;7000:30;;;;;;;;7065:1;7048:19;;:5;:19;;;;7040:28;;;;;;;;7106:5;7079:8;:15;7088:5;7079:15;;;;;;;;;;;;;;;:24;7095:7;7079:24;;;;;;;;;;;;;;;:32;;;;7142:7;7126:31;;7135:5;7126:31;;;7151:5;7126:31;;;;;;;;;;;;;;;;;;6916:248;;;:::o;3444:224::-;3523:4;3539:26;3549:4;3555:2;3559:5;3539:9;:26::i;:::-;3575:65;3584:4;3590:10;3602:37;3633:5;3602:8;:14;3611:4;3602:14;;;;;;;;;;;;;;;:26;3617:10;3602:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3575:8;:65::i;:::-;3657:4;3650:11;;3444:224;;;;;:::o;1431:145:7:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;1205:::-;1263:7;1295:1;1290;:6;;1282:15;;;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;2023:137:8:-;2084:4;2100:32;2110:10;2122:2;2126:5;2100:9;:32::i;:::-;2149:4;2142:11;;2023:137;;;;:::o;1349:467:11:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;5303:256:8:-;5404:1;5390:16;;:2;:16;;;;5382:25;;;;;;;;5436:26;5456:5;5436:9;:15;5446:4;5436:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5418:9;:15;5428:4;5418:15;;;;;;;;;;;;;;;:44;;;;5488:24;5506:5;5488:9;:13;5498:2;5488:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5472:9;:13;5482:2;5472:13;;;;;;;;;;;;;;;:40;;;;5542:2;5527:25;;5536:4;5527:25;;;5546:5;5527:25;;;;;;;;;;;;;;;;;;5303:256;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"openzeppelin-eth/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @title Props Time Based Transfers\n * @dev Contract allows to set a transfer start time (unix timestamp) from which transfers are allowed excluding one address defined in initialize\n **/\ncontract PropsTimeBasedTransfers is Initializable, ERC20 {\n    uint256 public transfersStartTime;\n    address public canTransferBeforeStartTime;\n\n    modifier canTransfer(address _account)\n    {\n        require(\n            now > transfersStartTime ||\n            _account==canTransferBeforeStartTime,\n            \"Cannot transfer before transfers start time from this account\"\n        );\n        _;\n    }\n\n    /**\n    * @dev The initializer function, with transfers start time `transfersStartTime` (unix timestamp)\n    * and `canTransferBeforeStartTime` address which is exempt from start time restrictions\n    * @param start uint Unix timestamp of when transfers can start\n    * @param account uint256 address exempt from the start date check\n    */\n    function initialize(\n        uint256 start,\n        address account\n    )\n        public\n        initializer\n    {\n        transfersStartTime = start;\n        canTransferBeforeStartTime = account;\n    }\n    /**\n    * @dev Transfer token for a specified address if allowed\n    * @param to The address to transfer to.\n    * @param value The amount to be transferred.\n    */\n    function transfer(\n        address to,\n        uint256 value\n    )\n        public\n        canTransfer(msg.sender)\n        returns (bool)\n    {\n        return super.transfer(to, value);\n    }\n\n    /**\n     * @dev Transfer tokens from one address to another if allowed\n     * Note that while this function emits an Approval event, this is not required as per the specification,\n     * and other compliant implementations may not emit the event.\n     * @param from address The address which you want to send tokens from\n     * @param to address The address which you want to transfer to\n     * @param value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    )\n        public\n        canTransfer(from)\n        returns (bool)\n    {\n        return super.transferFrom(from, to, value);\n    }\n}\n",
  "sourcePath": "/Users/jretina/Programming/props/props-token-distribution/contracts/token/PropsTimeBasedTransfers.sol",
  "ast": {
    "absolutePath": "/Users/jretina/Programming/props/props-token-distribution/contracts/token/PropsTimeBasedTransfers.sol",
    "exportedSymbols": {
      "PropsTimeBasedTransfers": [
        3343
      ]
    },
    "id": 3344,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3255,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 3256,
        "nodeType": "ImportDirective",
        "scope": 3344,
        "sourceUnit": 4222,
        "src": "25:45:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
        "id": 3257,
        "nodeType": "ImportDirective",
        "scope": 3344,
        "sourceUnit": 4030,
        "src": "71:58:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3258,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4221,
              "src": "360:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4221",
                "typeString": "contract Initializable"
              }
            },
            "id": 3259,
            "nodeType": "InheritanceSpecifier",
            "src": "360:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3260,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4029,
              "src": "375:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4029",
                "typeString": "contract ERC20"
              }
            },
            "id": 3261,
            "nodeType": "InheritanceSpecifier",
            "src": "375:5:4"
          }
        ],
        "contractDependencies": [
          4029,
          4165,
          4221
        ],
        "contractKind": "contract",
        "documentation": "@title Props Time Based Transfers\n@dev Contract allows to set a transfer start time (unix timestamp) from which transfers are allowed excluding one address defined in initialize*",
        "fullyImplemented": true,
        "id": 3343,
        "linearizedBaseContracts": [
          3343,
          4029,
          4165,
          4221
        ],
        "name": "PropsTimeBasedTransfers",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3263,
            "name": "transfersStartTime",
            "nodeType": "VariableDeclaration",
            "scope": 3343,
            "src": "387:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3262,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "387:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3265,
            "name": "canTransferBeforeStartTime",
            "nodeType": "VariableDeclaration",
            "scope": 3343,
            "src": "426:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3264,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "426:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "stateMutability": "nonpayable"
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3281,
              "nodeType": "Block",
              "src": "517:212:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3270,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4238,
                            "src": "548:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3271,
                            "name": "transfersStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3263,
                            "src": "554:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "548:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3273,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3267,
                            "src": "588:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3274,
                            "name": "canTransferBeforeStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3265,
                            "src": "598:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "588:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "548:76:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74207472616e73666572206265666f7265207472616e73666572732073746172742074696d652066726f6d2074686973206163636f756e74",
                        "id": 3277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "638:63:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee803f9aca2b8f89632fc19d85630ebe2e1b27f084b20a77f51a681ac293c071",
                          "typeString": "literal_string \"Cannot transfer before transfers start time from this account\""
                        },
                        "value": "Cannot transfer before transfers start time from this account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee803f9aca2b8f89632fc19d85630ebe2e1b27f084b20a77f51a681ac293c071",
                          "typeString": "literal_string \"Cannot transfer before transfers start time from this account\""
                        }
                      ],
                      "id": 3269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4239,
                        4240
                      ],
                      "referencedDeclaration": 4240,
                      "src": "527:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:184:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3279,
                  "nodeType": "ExpressionStatement",
                  "src": "527:184:4"
                },
                {
                  "id": 3280,
                  "nodeType": "PlaceholderStatement",
                  "src": "721:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 3282,
            "name": "canTransfer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3267,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3282,
                  "src": "495:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "stateMutability": "nonpayable"
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "494:18:4"
            },
            "src": "474:255:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3299,
              "nodeType": "Block",
              "src": "1193:89:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3291,
                      "name": "transfersStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3263,
                      "src": "1203:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3292,
                      "name": "start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3284,
                      "src": "1224:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1203:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3294,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:26:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3295,
                      "name": "canTransferBeforeStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3265,
                      "src": "1239:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3296,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3286,
                      "src": "1268:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1239:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3298,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:36:4"
                }
              ]
            },
            "documentation": "@dev The initializer function, with transfers start time `transfersStartTime` (unix timestamp)\nand `canTransferBeforeStartTime` address which is exempt from start time restrictions\n@param start uint Unix timestamp of when transfers can start\n@param account uint256 address exempt from the start date check",
            "id": 3300,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3289,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3288,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4202,
                  "src": "1177:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1177:11:4"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3284,
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 3300,
                  "src": "1109:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3286,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3300,
                  "src": "1132:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "stateMutability": "nonpayable"
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:54:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 3290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:0:4"
            },
            "scope": 3343,
            "src": "1080:202:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public",
            "kind": "function"
          },
          {
            "body": {
              "id": 3319,
              "nodeType": "Block",
              "src": "1597:49:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3315,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "1629:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3316,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3304,
                        "src": "1633:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3313,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4268,
                        "src": "1614:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PropsTimeBasedTransfers_$3343",
                          "typeString": "contract super PropsTimeBasedTransfers"
                        }
                      },
                      "id": 3314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3710,
                      "src": "1614:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1614:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3312,
                  "id": 3318,
                  "nodeType": "Return",
                  "src": "1607:32:4"
                }
              ]
            },
            "documentation": "@dev Transfer token for a specified address if allowed\n@param to The address to transfer to.\n@param value The amount to be transferred.",
            "id": 3320,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3307,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4236,
                      "src": "1558:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1558:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 3309,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3306,
                  "name": "canTransfer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3282,
                  "src": "1546:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1546:23:4"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3302,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "1483:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "stateMutability": "nonpayable"
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3304,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "1503:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1473:49:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 3312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3311,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "1587:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3310,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1586:6:4"
            },
            "scope": 3343,
            "src": "1456:190:4",
            "stateMutability": "nonpayable",
            "superFunction": 3710,
            "visibility": "public",
            "kind": "function"
          },
          {
            "body": {
              "id": 3341,
              "nodeType": "Block",
              "src": "2280:59:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3336,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3322,
                        "src": "2316:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3337,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3324,
                        "src": "2322:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3338,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3326,
                        "src": "2326:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3334,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4268,
                        "src": "2297:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PropsTimeBasedTransfers_$3343",
                          "typeString": "contract super PropsTimeBasedTransfers"
                        }
                      },
                      "id": 3335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3772,
                      "src": "2297:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2297:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3333,
                  "id": 3340,
                  "nodeType": "Return",
                  "src": "2290:42:4"
                }
              ]
            },
            "documentation": "@dev Transfer tokens from one address to another if allowed\nNote that while this function emits an Approval event, this is not required as per the specification,\nand other compliant implementations may not emit the event.\n@param from address The address which you want to send tokens from\n@param to address The address which you want to transfer to\n@param value uint256 the amount of tokens to be transferred",
            "id": 3342,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3329,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3322,
                    "src": "2247:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3330,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3328,
                  "name": "canTransfer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3282,
                  "src": "2235:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2235:17:4"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3322,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "2150:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2150:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "stateMutability": "nonpayable"
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3324,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "2172:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2172:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "stateMutability": "nonpayable"
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3326,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "2192:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2192:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2140:71:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 3333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3332,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "2270:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2270:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2269:6:4"
            },
            "scope": 3343,
            "src": "2119:220:4",
            "stateMutability": "nonpayable",
            "superFunction": 3772,
            "visibility": "public",
            "kind": "function"
          }
        ],
        "scope": 3344,
        "src": "324:2017:4"
      }
    ],
    "src": "0:2342:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/jretina/Programming/props/props-token-distribution/contracts/token/PropsTimeBasedTransfers.sol",
    "exportedSymbols": {
      "PropsTimeBasedTransfers": [
        3343
      ]
    },
    "id": 3344,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3255,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 3256,
        "nodeType": "ImportDirective",
        "scope": 3344,
        "sourceUnit": 4222,
        "src": "25:45:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol",
        "id": 3257,
        "nodeType": "ImportDirective",
        "scope": 3344,
        "sourceUnit": 4030,
        "src": "71:58:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3258,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4221,
              "src": "360:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4221",
                "typeString": "contract Initializable"
              }
            },
            "id": 3259,
            "nodeType": "InheritanceSpecifier",
            "src": "360:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3260,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4029,
              "src": "375:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4029",
                "typeString": "contract ERC20"
              }
            },
            "id": 3261,
            "nodeType": "InheritanceSpecifier",
            "src": "375:5:4"
          }
        ],
        "contractDependencies": [
          4029,
          4165,
          4221
        ],
        "contractKind": "contract",
        "documentation": "@title Props Time Based Transfers\n@dev Contract allows to set a transfer start time (unix timestamp) from which transfers are allowed excluding one address defined in initialize*",
        "fullyImplemented": true,
        "id": 3343,
        "linearizedBaseContracts": [
          3343,
          4029,
          4165,
          4221
        ],
        "name": "PropsTimeBasedTransfers",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3263,
            "name": "transfersStartTime",
            "nodeType": "VariableDeclaration",
            "scope": 3343,
            "src": "387:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3262,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "387:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3265,
            "name": "canTransferBeforeStartTime",
            "nodeType": "VariableDeclaration",
            "scope": 3343,
            "src": "426:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3264,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "426:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "stateMutability": "nonpayable"
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3281,
              "nodeType": "Block",
              "src": "517:212:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3270,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4238,
                            "src": "548:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3271,
                            "name": "transfersStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3263,
                            "src": "554:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "548:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3273,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3267,
                            "src": "588:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3274,
                            "name": "canTransferBeforeStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3265,
                            "src": "598:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "588:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "548:76:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74207472616e73666572206265666f7265207472616e73666572732073746172742074696d652066726f6d2074686973206163636f756e74",
                        "id": 3277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "638:63:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee803f9aca2b8f89632fc19d85630ebe2e1b27f084b20a77f51a681ac293c071",
                          "typeString": "literal_string \"Cannot transfer before transfers start time from this account\""
                        },
                        "value": "Cannot transfer before transfers start time from this account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee803f9aca2b8f89632fc19d85630ebe2e1b27f084b20a77f51a681ac293c071",
                          "typeString": "literal_string \"Cannot transfer before transfers start time from this account\""
                        }
                      ],
                      "id": 3269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4239,
                        4240
                      ],
                      "referencedDeclaration": 4240,
                      "src": "527:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:184:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3279,
                  "nodeType": "ExpressionStatement",
                  "src": "527:184:4"
                },
                {
                  "id": 3280,
                  "nodeType": "PlaceholderStatement",
                  "src": "721:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 3282,
            "name": "canTransfer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3267,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3282,
                  "src": "495:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "stateMutability": "nonpayable"
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "494:18:4"
            },
            "src": "474:255:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3299,
              "nodeType": "Block",
              "src": "1193:89:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3291,
                      "name": "transfersStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3263,
                      "src": "1203:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3292,
                      "name": "start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3284,
                      "src": "1224:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1203:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3294,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:26:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3295,
                      "name": "canTransferBeforeStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3265,
                      "src": "1239:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3296,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3286,
                      "src": "1268:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1239:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3298,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:36:4"
                }
              ]
            },
            "documentation": "@dev The initializer function, with transfers start time `transfersStartTime` (unix timestamp)\nand `canTransferBeforeStartTime` address which is exempt from start time restrictions\n@param start uint Unix timestamp of when transfers can start\n@param account uint256 address exempt from the start date check",
            "id": 3300,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3289,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3288,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4202,
                  "src": "1177:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1177:11:4"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3284,
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 3300,
                  "src": "1109:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3286,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3300,
                  "src": "1132:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "stateMutability": "nonpayable"
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:54:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 3290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:0:4"
            },
            "scope": 3343,
            "src": "1080:202:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public",
            "kind": "function"
          },
          {
            "body": {
              "id": 3319,
              "nodeType": "Block",
              "src": "1597:49:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3315,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "1629:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3316,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3304,
                        "src": "1633:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3313,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4268,
                        "src": "1614:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PropsTimeBasedTransfers_$3343",
                          "typeString": "contract super PropsTimeBasedTransfers"
                        }
                      },
                      "id": 3314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3710,
                      "src": "1614:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1614:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3312,
                  "id": 3318,
                  "nodeType": "Return",
                  "src": "1607:32:4"
                }
              ]
            },
            "documentation": "@dev Transfer token for a specified address if allowed\n@param to The address to transfer to.\n@param value The amount to be transferred.",
            "id": 3320,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3307,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4236,
                      "src": "1558:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1558:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 3309,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3306,
                  "name": "canTransfer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3282,
                  "src": "1546:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1546:23:4"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3302,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "1483:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "stateMutability": "nonpayable"
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3304,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "1503:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1473:49:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 3312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3311,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "1587:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3310,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1586:6:4"
            },
            "scope": 3343,
            "src": "1456:190:4",
            "stateMutability": "nonpayable",
            "superFunction": 3710,
            "visibility": "public",
            "kind": "function"
          },
          {
            "body": {
              "id": 3341,
              "nodeType": "Block",
              "src": "2280:59:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3336,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3322,
                        "src": "2316:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3337,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3324,
                        "src": "2322:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3338,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3326,
                        "src": "2326:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3334,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4268,
                        "src": "2297:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PropsTimeBasedTransfers_$3343",
                          "typeString": "contract super PropsTimeBasedTransfers"
                        }
                      },
                      "id": 3335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3772,
                      "src": "2297:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2297:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3333,
                  "id": 3340,
                  "nodeType": "Return",
                  "src": "2290:42:4"
                }
              ]
            },
            "documentation": "@dev Transfer tokens from one address to another if allowed\nNote that while this function emits an Approval event, this is not required as per the specification,\nand other compliant implementations may not emit the event.\n@param from address The address which you want to send tokens from\n@param to address The address which you want to transfer to\n@param value uint256 the amount of tokens to be transferred",
            "id": 3342,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3329,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3322,
                    "src": "2247:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3330,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3328,
                  "name": "canTransfer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3282,
                  "src": "2235:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2235:17:4"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3322,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "2150:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2150:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "stateMutability": "nonpayable"
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3324,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "2172:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2172:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "stateMutability": "nonpayable"
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3326,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "2192:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2192:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2140:71:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 3333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3332,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "2270:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2270:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2269:6:4"
            },
            "scope": 3343,
            "src": "2119:220:4",
            "stateMutability": "nonpayable",
            "superFunction": 3772,
            "visibility": "public",
            "kind": "function"
          }
        ],
        "scope": 3344,
        "src": "324:2017:4"
      }
    ],
    "src": "0:2342:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-05-27T13:04:52.067Z",
  "devdoc": {
    "details": "Contract allows to set a transfer start time (unix timestamp) from which transfers are allowed excluding one address defined in initialize*",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "initialize(uint256,address)": {
        "details": "The initializer function, with transfers start time `transfersStartTime` (unix timestamp) and `canTransferBeforeStartTime` address which is exempt from start time restrictions",
        "params": {
          "account": "uint256 address exempt from the start date check",
          "start": "uint Unix timestamp of when transfers can start"
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address if allowed",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another if allowed Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "Props Time Based Transfers"
  },
  "userdoc": {
    "methods": {}
  }
}