{
  "contractName": "PropsToken",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "updateController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "canTransferBeforeStartTime",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardsStartTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenName",
          "type": "string"
        }
      ],
      "name": "initializePermitUpgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MY_CHAIN_ID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transfersStartTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "newController",
          "type": "address"
        }
      ],
      "name": "ControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_holder",
          "type": "address"
        },
        {
          "name": "_controller",
          "type": "address"
        },
        {
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"updateController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canTransferBeforeStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsStartTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenName\",\"type\":\"string\"}],\"name\":\"initializePermitUpgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MY_CHAIN_ID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_controller\",\"type\":\"address\"},{\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_deadline\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addMinter(address)\":{\"details\":\"Allows the controller/owner to update to new minter\",\"params\":{\"_minter\":\"address address of the new minter\"}},\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"initialize(address)\":{\"details\":\"The initializer function for upgrade as initialize was already called, get the decimals used in the token to initialize the params\",\"params\":{\"_controller\":\"address that will have controller functionality on token\"}},\"initialize(address,address,address)\":{\"details\":\"Initializer function. Called only once when a proxy for the contract is created.\",\"params\":{\"_controller\":\"address that will have controller functionality on token\",\"_holder\":\"address that will receive its initial supply and be able to transfer before transfers start time\",\"_minter\":\"address that will have mint functionality on token\"}},\"initializePermitUpgrade(string)\":{\"details\":\"Initialize post separation of rewards contract upgrade\",\"params\":{\"_tokenName\":\"string token name\"}},\"mint(address,uint256)\":{\"details\":\"Allows the minter to mint tokens to a given address\",\"params\":{\"_account\":\"address of the receiving account\",\"_amount\":\"uint256 how much to mint\"}},\"name()\":{\"return\":\"the name of the token.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Allows for approvals to be made via secp256k1 signatures\",\"params\":{\"_amount\":\"uint spender\",\"_deadline\":\"uint spender\",\"_owner\":\"address owner\",\"_r\":\"bytes32 spender\",\"_s\":\"bytes32 spender\",\"_spender\":\"address spender\",\"_v\":\"uint8 spender\"}},\"reclaimToken(address,address,uint256)\":{\"details\":\"Reclaim all ERC20 compatible tokens\",\"params\":{\"_token\":\"ERC20 The address of the token contract\"}},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"updateController(address)\":{\"details\":\"Allows the controller/owner to update to a new controller\",\"params\":{\"_controller\":\"address address of the new controller\"}}},\"title\":\"PROPSToken\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsToken.sol\":\"PropsToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/ERC865Token.sol\":{\"keccak256\":\"0x0ac88349dc5d9e75d6744b6149b59d7655cc203d21ddab29faca8639dcafcb21\",\"urls\":[\"bzzr://8a77468fcd43278bf3c7e07173853d78a15a377a97ca5134743ddceb2d0422c1\"]},\"/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/IERC865.sol\":{\"keccak256\":\"0x94b2dffbb5a3429040ea84c2d9186185ad4ed32402bd0ce3310e79aa7750f2cf\",\"urls\":[\"bzzr://bd4e55bed687adc411bc7201427a87a5cafc6dea0482859c438cccd6bccfe817\"]},\"/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsTimeBasedTransfers.sol\":{\"keccak256\":\"0x0b724e7bf486930451b7f461de501749687618f2269de4ca049fcb692b21b949\",\"urls\":[\"bzzr://b98ab2a3c9795054fe38fdc38023bf99c90529ea63087994753598eada9736b3\"]},\"/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsToken.sol\":{\"keccak256\":\"0xdef90a6422d024c856c15fb950716666f1f6ed9b3c3369566a5777a7eb95ecdf\",\"urls\":[\"bzzr://90a02dba9afef9d8d3c1611dec72f28f6a2a1bdff74e28f79a83db345fcfec4c\"]},\"/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsTokenDetailed.sol\":{\"keccak256\":\"0xb6379c7b2e5d77b496a1357df28dd32646ee2dd20b623b831116684822054328\",\"urls\":[\"bzzr://ef26e0b9403af193e44c3f2ba2600294767977371b911562637c0eaca4f7cbfd\"]},\"/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsTokenLib.sol\":{\"keccak256\":\"0xd44c9a6186855347693369c8f4d09e62195ebeb5940b58a468353ad58939af2c\",\"urls\":[\"bzzr://404a19e6c0372ebdc4c403093f4325314899d892e2f1df894930273152e91eb1\"]},\"openzeppelin-eth/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xca27427124232a675642ba45303b78d5a36e1207ee222030ef249e11eba5a224\",\"urls\":[\"bzzr://013c67962737acca577ecd24e6b6c80f85b05fd03c1c75ab68f65a084f4b4cfd\"]},\"openzeppelin-eth/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24252d4567a1cbf14d609a8308e491359c9200d58a2e78282938d945aeeb2bb3\",\"urls\":[\"bzzr://61401aaae518b765df91e443ef9dfb7af874341921829a063cb4804a6fb49c5e\"]},\"openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x8034b14917a770a79a761769bfff95464ad431fad758be410f3a57ffd80a61c6\",\"urls\":[\"bzzr://093ccda4f849bc03c8d68aa5b3f94b43cfa73d8392452b1a45d6d4e1f966f1f0\"]},\"openzeppelin-eth/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x0786a09def412e5a92e1da8545114b39f9bbd8bd1ba6f62a5bf8b81f54ab25bf\",\"urls\":[\"bzzr://b35dbbf6dd505fcb601ca968d4628714a3af84024224228433eadf700e94f250\"]},\"openzeppelin-eth/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x885962cc93b105975c112906fc38e50c1a170e3c5f08dc55328e90fd5b3734d1\",\"urls\":[\"bzzr://36483b11e610c19d02acda1e408bb5eb306db428c5f6071a7869afa95bde1904\"]},\"zos-lib/contracts/Initializable.sol\":{\"keccak256\":\"0xac4cc87395794e21e95549a1b4002881621d59878c4129d534a0089ce5cf7212\",\"urls\":[\"bzzr://1725ac3e1941f8e2bf5c1966abd66bd744d40c85ae8195eb697ec3256bc1fc39\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612d5b806100206000396000f300608060405260043610610180576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306cb5b661461018557806306fdde03146101c8578063095ea7b3146102585780631624f6c6146102bd57806318160ddd1461037957806323b872dd146103a45780632ab4d052146104295780633092afd51461045457806330adf81f14610497578063313ce567146104ca5780633644e515146104fb578063395093511461052e57806340c10f191461059357806345b6d7dc146105e0578063635685021461063757806370a08231146106625780637ecebe00146106b957806390ee4b551461071057806395d89b4114610779578063983b2d56146108095780639e3d41a81461084c578063a457c2d714610877578063a9059cbb146108dc578063c0c53b8b14610941578063c4d66de8146109c4578063cd61677614610a07578063d0f22e9c14610a74578063d505accf14610a9f578063dd62ed3e14610b3f578063f77c479114610bb6575b600080fd5b34801561019157600080fd5b506101c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c0d565b005b3480156101d457600080fd5b506101dd610e24565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021d578082015181840152602081019050610202565b50505050905090810190601f16801561024a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026457600080fd5b506102a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ec6565b604051808215151515815260200191505060405180910390f35b3480156102c957600080fd5b50610377600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803560ff169060200190929190505050610edd565b005b34801561038557600080fd5b5061038e61105e565b6040518082815260200191505060405180910390f35b3480156103b057600080fd5b5061040f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611068565b604051808215151515815260200191505060405180910390f35b34801561043557600080fd5b5061043e611119565b6040518082815260200191505060405180910390f35b34801561046057600080fd5b50610495600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061111f565b005b3480156104a357600080fd5b506104ac61123f565b60405180826000191660001916815260200191505060405180910390f35b3480156104d657600080fd5b506104df611266565b604051808260ff1660ff16815260200191505060405180910390f35b34801561050757600080fd5b5061051061127d565b60405180826000191660001916815260200191505060405180910390f35b34801561053a57600080fd5b50610579600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611283565b604051808215151515815260200191505060405180910390f35b34801561059f57600080fd5b506105de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611328565b005b3480156105ec57600080fd5b506105f56114b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561064357600080fd5b5061064c6114d6565b6040518082815260200191505060405180910390f35b34801561066e57600080fd5b506106a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114dc565b6040518082815260200191505060405180910390f35b3480156106c557600080fd5b506106fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611525565b6040518082815260200191505060405180910390f35b34801561071c57600080fd5b50610777600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061153d565b005b34801561078557600080fd5b5061078e6118f0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107ce5780820151818401526020810190506107b3565b50505050905090810190601f1680156107fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561081557600080fd5b5061084a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611992565b005b34801561085857600080fd5b50610861611ab2565b6040518082815260200191505060405180910390f35b34801561088357600080fd5b506108c2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ab8565b604051808215151515815260200191505060405180910390f35b3480156108e857600080fd5b50610927600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b5d565b604051808215151515815260200191505060405180910390f35b34801561094d57600080fd5b506109c2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b74565b005b3480156109d057600080fd5b50610a05600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d8a565b005b348015610a1357600080fd5b50610a72600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d9e565b005b348015610a8057600080fd5b50610a896120b1565b6040518082815260200191505060405180910390f35b348015610aab57600080fd5b50610b3d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803560001916906020019092919080356000191690602001909291905050506120b7565b005b348015610b4b57600080fd5b50610ba0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124e6565b6040518082815260200191505060405180910390f35b348015610bc257600080fd5b50610bcb61256d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60ba60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cd2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652074686520636f6e74726f6c6c65720000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f436f6e74726f6c6c65722063616e6e6f7420626520746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8060ba60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f1304018cfe79741dcf02ba6b61d39cc4757d59395d03224d9925c7aa8300214660405160405180910390a250565b606060338054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ebc5780601f10610e9157610100808354040283529160200191610ebc565b820191906000526020600020905b815481529060010190602001808311610e9f57829003601f168201915b5050505050905090565b6000610ed3338484612593565b6001905092915050565b60008060019054906101000a900460ff1680610efd5750610efc6126f6565b5b80610f1457506000809054906101000a900460ff16155b1515610fae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550836033908051906020019061100b929190612c8a565b508260349080519060200190611022929190612c8a565b5081603560006101000a81548160ff021916908360ff16021790555080600060016101000a81548160ff02191690831515021790555050505050565b6000606a54905090565b6000611075848484612707565b61110e843361110985606960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292590919063ffffffff16565b612593565b600190509392505050565b60b85481565b60ba60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652074686520636f6e74726f6c6c65720000000000000000000081525060200191505060405180910390fd5b600060bb60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960010281565b6000603560009054906101000a900460ff16905090565b60bc5481565b600061131e338461131985606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461294690919063ffffffff16565b612593565b6001905092915050565b60bb60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561140f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f4d696e7420666e2063616e2062652063616c6c6564206f6e6c79206279206d6981526020017f6e7465720000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60b85461142c8261141e61105e565b61294690919063ffffffff16565b111515156114a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4d617820746f74616c20737570706c792065786365656465640000000000000081525060200191505060405180910390fd5b6114ac8282612967565b5050565b609f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60b95481565b6000606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60bd6020528060005260406000206000915090505481565b6000606060008060019054906101000a900460ff168061156157506115606126f6565b5b8061157857506000809054906101000a900460ff16155b1515611612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506040805190810160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525091508292508260be8190555060405180807f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081526020017f76657273696f6e2c75696e7432353620636861696e49642c616464726573732081526020017f766572696679696e67436f6e747261637429000000000000000000000000000081525060520190506040518091039020846040518082805190602001908083835b602083101515611753578051825260208201915060208101905060208303925061172e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020836040518082805190602001908083835b6020831015156117b65780518252602082019150602081019050602083039250611791565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208530604051602001808660001916600019168152602001856000191660001916815260200184600019166000191681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001955050505050506040516020818303038152906040526040518082805190602001908083835b6020831015156118995780518252602082019150602081019050602083039250611874565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060bc816000191690555080600060016101000a81548160ff02191690831515021790555050505050565b606060348054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119885780601f1061195d57610100808354040283529160200191611988565b820191906000526020600020905b81548152906001019060200180831161196b57829003601f168201915b5050505050905090565b60ba60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652074686520636f6e74726f6c6c65720000000000000000000081525060200191505060405180910390fd5b600160bb60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60be5481565b6000611b533384611b4e85606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292590919063ffffffff16565b612593565b6001905092915050565b6000611b6a338484612707565b6001905092915050565b60008060008060019054906101000a900460ff1680611b975750611b966126f6565b5b80611bae57506000809054906101000a900460ff16155b1515611c48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550601292508260ff16600a0a6323c34600029150611d176040805190810160405280600b81526020017f50726f707320546f6b656e0000000000000000000000000000000000000000008152506040805190810160405280600581526020017f50524f505300000000000000000000000000000000000000000000000000000081525085610edd565b611d2085611d8a565b611d5e6040805190810160405280600b81526020017f50726f707320546f6b656e00000000000000000000000000000000000000000081525061153d565b611d688683612967565b80600060016101000a81548160ff021916908315150217905550505050505050565b600060129050611d9a8282612aa7565b5050565b600060ba60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652074686520636f6e74726f6c6c65720000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611f0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4d757374207472616e7366657220746f20726563697069656e7400000000000081525060200191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611fa557600080fd5b505af1158015611fb9573d6000803e3d6000fd5b505050506040513d6020811015611fcf57600080fd5b81019080805190602001909291905050509050808211151515612080576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f43616e6e6f74207472616e73666572206d6f7265207468616e2062616c616e6381526020017f650000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6120ab83838673ffffffffffffffffffffffffffffffffffffffff16612b9c9092919063ffffffff16565b50505050565b609e5481565b600080428610151515612132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f5065726d6974204578706972656400000000000000000000000000000000000081525060200191505060405180910390fd5b60bc547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c96001028a8a8a60bd60008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b6040516020018087600019166000191681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b602083101515612282578051825260208201915060208101905060208303925061225d565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183600019166000191681526020018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515612342578051825260208201915060208101905060208303925061231d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209150600182868686604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af11580156123e8573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561245c57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15156124d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f496e76616c6964205369676e617475726500000000000000000000000000000081525060200191505060405180910390fd5b6124db898989612593565b505050505050505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60ba60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156125cf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561260b57600080fd5b80606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600080303b90506000811491505090565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561275557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561279157600080fd5b6127e381606860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292590919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061287881606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461294690919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008083831115151561293757600080fd5b82840390508091505092915050565b600080828401905083811015151561295d57600080fd5b8091505092915050565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561298d57600080fd5b6129a281606a5461294690919063ffffffff16565b606a819055506129fa81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461294690919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600060b854141515612b47576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f496e697469616c697a6520726577617264732075706772616465312063616e2081526020017f68617070656e206f6e6c79206f6e63650000000000000000000000000000000081525060400191505060405180910390fd5b8160ba60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600a0a633b9aca000260b8819055505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612c3f57600080fd5b505af1158015612c53573d6000803e3d6000fd5b505050506040513d6020811015612c6957600080fd5b81019080805190602001909291905050501515612c8557600080fd5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ccb57805160ff1916838001178555612cf9565b82800160010185558215612cf9579182015b82811115612cf8578251825591602001919060010190612cdd565b5b509050612d069190612d0a565b5090565b612d2c91905b80821115612d28576000816000905550600101612d10565b5090565b905600a165627a7a72305820febdedb3c89073f74ddd29329c2f817bae3a25eebc9319da9cab686dcb4ef5d20029",
  "deployedBytecode": "0x608060405260043610610180576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306cb5b661461018557806306fdde03146101c8578063095ea7b3146102585780631624f6c6146102bd57806318160ddd1461037957806323b872dd146103a45780632ab4d052146104295780633092afd51461045457806330adf81f14610497578063313ce567146104ca5780633644e515146104fb578063395093511461052e57806340c10f191461059357806345b6d7dc146105e0578063635685021461063757806370a08231146106625780637ecebe00146106b957806390ee4b551461071057806395d89b4114610779578063983b2d56146108095780639e3d41a81461084c578063a457c2d714610877578063a9059cbb146108dc578063c0c53b8b14610941578063c4d66de8146109c4578063cd61677614610a07578063d0f22e9c14610a74578063d505accf14610a9f578063dd62ed3e14610b3f578063f77c479114610bb6575b600080fd5b34801561019157600080fd5b506101c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c0d565b005b3480156101d457600080fd5b506101dd610e24565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021d578082015181840152602081019050610202565b50505050905090810190601f16801561024a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026457600080fd5b506102a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ec6565b604051808215151515815260200191505060405180910390f35b3480156102c957600080fd5b50610377600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803560ff169060200190929190505050610edd565b005b34801561038557600080fd5b5061038e61105e565b6040518082815260200191505060405180910390f35b3480156103b057600080fd5b5061040f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611068565b604051808215151515815260200191505060405180910390f35b34801561043557600080fd5b5061043e611119565b6040518082815260200191505060405180910390f35b34801561046057600080fd5b50610495600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061111f565b005b3480156104a357600080fd5b506104ac61123f565b60405180826000191660001916815260200191505060405180910390f35b3480156104d657600080fd5b506104df611266565b604051808260ff1660ff16815260200191505060405180910390f35b34801561050757600080fd5b5061051061127d565b60405180826000191660001916815260200191505060405180910390f35b34801561053a57600080fd5b50610579600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611283565b604051808215151515815260200191505060405180910390f35b34801561059f57600080fd5b506105de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611328565b005b3480156105ec57600080fd5b506105f56114b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561064357600080fd5b5061064c6114d6565b6040518082815260200191505060405180910390f35b34801561066e57600080fd5b506106a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114dc565b6040518082815260200191505060405180910390f35b3480156106c557600080fd5b506106fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611525565b6040518082815260200191505060405180910390f35b34801561071c57600080fd5b50610777600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061153d565b005b34801561078557600080fd5b5061078e6118f0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107ce5780820151818401526020810190506107b3565b50505050905090810190601f1680156107fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561081557600080fd5b5061084a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611992565b005b34801561085857600080fd5b50610861611ab2565b6040518082815260200191505060405180910390f35b34801561088357600080fd5b506108c2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ab8565b604051808215151515815260200191505060405180910390f35b3480156108e857600080fd5b50610927600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b5d565b604051808215151515815260200191505060405180910390f35b34801561094d57600080fd5b506109c2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b74565b005b3480156109d057600080fd5b50610a05600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d8a565b005b348015610a1357600080fd5b50610a72600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d9e565b005b348015610a8057600080fd5b50610a896120b1565b6040518082815260200191505060405180910390f35b348015610aab57600080fd5b50610b3d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803560001916906020019092919080356000191690602001909291905050506120b7565b005b348015610b4b57600080fd5b50610ba0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124e6565b6040518082815260200191505060405180910390f35b348015610bc257600080fd5b50610bcb61256d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60ba60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cd2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652074686520636f6e74726f6c6c65720000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f436f6e74726f6c6c65722063616e6e6f7420626520746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8060ba60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f1304018cfe79741dcf02ba6b61d39cc4757d59395d03224d9925c7aa8300214660405160405180910390a250565b606060338054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ebc5780601f10610e9157610100808354040283529160200191610ebc565b820191906000526020600020905b815481529060010190602001808311610e9f57829003601f168201915b5050505050905090565b6000610ed3338484612593565b6001905092915050565b60008060019054906101000a900460ff1680610efd5750610efc6126f6565b5b80610f1457506000809054906101000a900460ff16155b1515610fae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550836033908051906020019061100b929190612c8a565b508260349080519060200190611022929190612c8a565b5081603560006101000a81548160ff021916908360ff16021790555080600060016101000a81548160ff02191690831515021790555050505050565b6000606a54905090565b6000611075848484612707565b61110e843361110985606960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292590919063ffffffff16565b612593565b600190509392505050565b60b85481565b60ba60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652074686520636f6e74726f6c6c65720000000000000000000081525060200191505060405180910390fd5b600060bb60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960010281565b6000603560009054906101000a900460ff16905090565b60bc5481565b600061131e338461131985606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461294690919063ffffffff16565b612593565b6001905092915050565b60bb60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561140f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f4d696e7420666e2063616e2062652063616c6c6564206f6e6c79206279206d6981526020017f6e7465720000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60b85461142c8261141e61105e565b61294690919063ffffffff16565b111515156114a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4d617820746f74616c20737570706c792065786365656465640000000000000081525060200191505060405180910390fd5b6114ac8282612967565b5050565b609f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60b95481565b6000606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60bd6020528060005260406000206000915090505481565b6000606060008060019054906101000a900460ff168061156157506115606126f6565b5b8061157857506000809054906101000a900460ff16155b1515611612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506040805190810160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525091508292508260be8190555060405180807f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081526020017f76657273696f6e2c75696e7432353620636861696e49642c616464726573732081526020017f766572696679696e67436f6e747261637429000000000000000000000000000081525060520190506040518091039020846040518082805190602001908083835b602083101515611753578051825260208201915060208101905060208303925061172e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020836040518082805190602001908083835b6020831015156117b65780518252602082019150602081019050602083039250611791565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208530604051602001808660001916600019168152602001856000191660001916815260200184600019166000191681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001955050505050506040516020818303038152906040526040518082805190602001908083835b6020831015156118995780518252602082019150602081019050602083039250611874565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060bc816000191690555080600060016101000a81548160ff02191690831515021790555050505050565b606060348054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119885780601f1061195d57610100808354040283529160200191611988565b820191906000526020600020905b81548152906001019060200180831161196b57829003601f168201915b5050505050905090565b60ba60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652074686520636f6e74726f6c6c65720000000000000000000081525060200191505060405180910390fd5b600160bb60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60be5481565b6000611b533384611b4e85606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292590919063ffffffff16565b612593565b6001905092915050565b6000611b6a338484612707565b6001905092915050565b60008060008060019054906101000a900460ff1680611b975750611b966126f6565b5b80611bae57506000809054906101000a900460ff16155b1515611c48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b600060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550601292508260ff16600a0a6323c34600029150611d176040805190810160405280600b81526020017f50726f707320546f6b656e0000000000000000000000000000000000000000008152506040805190810160405280600581526020017f50524f505300000000000000000000000000000000000000000000000000000081525085610edd565b611d2085611d8a565b611d5e6040805190810160405280600b81526020017f50726f707320546f6b656e00000000000000000000000000000000000000000081525061153d565b611d688683612967565b80600060016101000a81548160ff021916908315150217905550505050505050565b600060129050611d9a8282612aa7565b5050565b600060ba60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652074686520636f6e74726f6c6c65720000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611f0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4d757374207472616e7366657220746f20726563697069656e7400000000000081525060200191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611fa557600080fd5b505af1158015611fb9573d6000803e3d6000fd5b505050506040513d6020811015611fcf57600080fd5b81019080805190602001909291905050509050808211151515612080576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f43616e6e6f74207472616e73666572206d6f7265207468616e2062616c616e6381526020017f650000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6120ab83838673ffffffffffffffffffffffffffffffffffffffff16612b9c9092919063ffffffff16565b50505050565b609e5481565b600080428610151515612132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f5065726d6974204578706972656400000000000000000000000000000000000081525060200191505060405180910390fd5b60bc547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c96001028a8a8a60bd60008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b6040516020018087600019166000191681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b602083101515612282578051825260208201915060208101905060208303925061225d565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183600019166000191681526020018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515612342578051825260208201915060208101905060208303925061231d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209150600182868686604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af11580156123e8573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561245c57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15156124d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f496e76616c6964205369676e617475726500000000000000000000000000000081525060200191505060405180910390fd5b6124db898989612593565b505050505050505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60ba60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156125cf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561260b57600080fd5b80606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600080303b90506000811491505090565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561275557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561279157600080fd5b6127e381606860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292590919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061287881606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461294690919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008083831115151561293757600080fd5b82840390508091505092915050565b600080828401905083811015151561295d57600080fd5b8091505092915050565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561298d57600080fd5b6129a281606a5461294690919063ffffffff16565b606a819055506129fa81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461294690919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600060b854141515612b47576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f496e697469616c697a6520726577617264732075706772616465312063616e2081526020017f68617070656e206f6e6c79206f6e63650000000000000000000000000000000081525060400191505060405180910390fd5b8160ba60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600a0a633b9aca000260b8819055505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612c3f57600080fd5b505af1158015612c53573d6000803e3d6000fd5b505050506040513d6020811015612c6957600080fd5b81019080805190602001909291905050501515612c8557600080fd5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ccb57805160ff1916838001178555612cf9565b82800160010185558215612cf9579182015b82811115612cf8578251825591602001919060010190612cdd565b5b509050612d069190612d0a565b5090565b612d2c91905b80821115612d28576000816000905550600101612d10565b5090565b905600a165627a7a72305820febdedb3c89073f74ddd29329c2f817bae3a25eebc9319da9cab686dcb4ef5d20029",
  "sourceMap": "764:1042:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;764:1042:3;;;;;;;",
  "deployedSourceMap": "764:1042:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4450:240:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4450:240:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;666:67:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:67:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;666:67:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2462:145:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2462:145:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;460:154:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;460:154:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:83:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;702:83:7;;;;;;;;;;;;;;;;;;;;;;;2879:240;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2879:240:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;663:29:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;663:29:4;;;;;;;;;;;;;;;;;;;;;;;4936:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4936:102:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;984:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;984:116:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;924:74:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;924:74:8;;;;;;;;;;;;;;;;;;;;;;;;;;;843:31:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;843:31:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3570:212:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3570:212:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5227:267:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5227:267:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;517:41:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;517:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;698:36:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;698:36:4;;;;;;;;;;;;;;;;;;;;;;;986:98:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;986:98:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1106:41:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1106:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1842:613;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1842:613:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;787:71:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;787:71:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;787:71:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4832:98:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4832:98:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1153:26:4;;;;;;;;;;;;;;;;;;;;;;;4238:222:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4238:222:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1703:127:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1284:520:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1284:520:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1580:130:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1580:130:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;3934:360;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3934:360:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:33:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;478:33:2;;;;;;;;;;;;;;;;;;;;;;;2789:1014:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2789:1014:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1401:150:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1401:150:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;752:25:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;752:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;4450:240;1277:10;;;;;;;;;;;1263:24;;:10;:24;;;1255:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4560:1;4537:25;;:11;:25;;;;4529:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4627:11;4614:10;;:24;;;;;;;;;;;;;;;;;;4671:11;4653:30;;;;;;;;;;;;4450:240;:::o;666:67:8:-;702:6;723:5;716:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;666:67;:::o;2462:145:7:-;2527:4;2543:36;2552:10;2564:7;2573:5;2543:8;:36::i;:::-;2596:4;2589:11;;2462:145;;;;:::o;460:154:8:-;1129:20:11;1024:12;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;557:4:8;549:5;:12;;;;;;;;;;;;:::i;:::-;;577:6;567:7;:16;;;;;;;;;;;;:::i;:::-;;601:8;589:9;;:20;;;;;;;;;;;;;;;;;;1243:15:11;1228:12;;:30;;;;;;;;;;;;;;;;;;460:154:8;;;;:::o;702:83:7:-;746:7;768:12;;761:19;;702:83;:::o;2879:240::-;2982:4;3000:26;3010:4;3016:2;3020:5;3000:9;:26::i;:::-;3032:65;3041:4;3047:10;3059:37;3090:5;3059:8;:14;3068:4;3059:14;;;;;;;;;;;;;;;:26;3074:10;3059:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3032:8;:65::i;:::-;3110:4;3103:11;;2879:240;;;;;:::o;663:29:4:-;;;;:::o;4936:102::-;1277:10;;;;;;;;;;;1263:24;;:10;:24;;;1255:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5026:5;5007:7;:16;5015:7;5007:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;4936:102;:::o;984:116::-;1034:66;984:116;;;:::o;924:74:8:-;964:5;984:9;;;;;;;;;;;977:16;;924:74;:::o;843:31:4:-;;;;:::o;3570:212:7:-;3670:4;3684:76;3693:10;3705:7;3714:45;3748:10;3714:8;:20;3723:10;3714:20;;;;;;;;;;;;;;;:29;3735:7;3714:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;3684:8;:76::i;:::-;3773:4;3766:11;;3570:212;;;;:::o;5227:267:4:-;5301:7;:19;5309:10;5301:19;;;;;;;;;;;;;;;;;;;;;;;;;5293:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5409:14;;5379:26;5397:7;5379:13;:11;:13::i;:::-;:17;;:26;;;;:::i;:::-;:44;;5371:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5463:24;5469:8;5479:7;5463:5;:24::i;:::-;5227:267;;:::o;517:41:2:-;;;;;;;;;;;;;:::o;698:36:4:-;;;;:::o;986:98:7:-;1041:7;1063:9;:16;1073:5;1063:16;;;;;;;;;;;;;;;;1056:23;;986:98;;;:::o;1106:41:4:-;;;;;;;;;;;;;;;;;:::o;1842:613::-;1930:15;1955:17;1129:20:11;1024:12;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1955:23:4;;;;;;;;;;;;;;;;;;;;2022:7;2011:18;;2063:7;2049:11;:21;;;;2150:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2317:10;2301:28;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2301:28:4;;;;;;;;;;;;;;;;2363:3;2347:21;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2347:21:4;;;;;;;;;;;;;;;;2386:7;2419:4;2122:316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2122:316:4;;;2099:349;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2099:349:4;;;;;;;;;;;;;;;;2080:16;:368;;;;;;;1243:15:11;1228:12;;:30;;;;;;;;;;;;;;;;;;1842:613:4;;;;:::o;787:71:8:-;825:6;846:7;839:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;787:71;:::o;4832:98:4:-;1277:10;;;;;;;;;;;1263:24;;:10;:24;;;1255:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4919:4;4900:7;:16;4908:7;4900:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;4832:98;:::o;1153:26::-;;;;:::o;4238:222:7:-;4343:4;4357:81;4366:10;4378:7;4387:50;4421:15;4387:8;:20;4396:10;4387:20;;;;;;;;;;;;;;;:29;4408:7;4387:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4357:8;:81::i;:::-;4451:4;4444:11;;4238:222;;;;:::o;1703:127::-;1764:4;1776:32;1786:10;1798:2;1802:5;1776:9;:32::i;:::-;1821:4;1814:11;;1703:127;;;;:::o;1284:520:3:-;1418:14;1515:19;1129:20:11;1024:12;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1435:2:3;1418:19;;1562:8;1554:17;;1550:2;:21;1537:9;:35;1515:57;;1583:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1632:8;1583:24;:58::i;:::-;1651:42;1681:11;1651:29;:42::i;:::-;1703:57;;;;;;;;;;;;;;;;;;;:42;:57::i;:::-;1770:27;1776:7;1785:11;1770:5;:27::i;:::-;1243:15:11;1228:12;;:30;;;;;;;;;;;;;;;;;;1284:520:3;;;;;;:::o;1580:130:4:-;1638:16;1657:2;1638:21;;1669:34;1681:11;1694:8;1669:11;:34::i;:::-;1580:130;;:::o;3934:360::-;4130:15;1277:10;;;;;;;;;;;1263:24;;:10;:24;;;1255:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4087:1;4072:17;;:3;:17;;;;4064:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4148:6;:16;;;4165:4;4148:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4148:22:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4148:22:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4148:22:4;;;;;;;;;;;;;;;;4130:40;;4199:7;4188;:18;;4180:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4254:33;4274:3;4279:7;4254:6;:19;;;;:33;;;;;:::i;:::-;3934:360;;;;:::o;478:33:2:-;;;;:::o;2789:1014:4:-;3055:14;3595:24;3011:15;2998:9;:28;;2990:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3181:16;;1034:66;3294:15;;3339:6;3375:8;3413:7;3450:6;:14;3457:6;3450:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;3496:9;3254:277;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3254:277:4;;;3219:334;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3219:334:4;;;;;;;;;;;;;;;;3111:460;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3111:460:4;;;3084:501;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3084:501:4;;;;;;;;;;;;;;;;3055:530;;3622:29;3632:6;3640:2;3644;3648;3622:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3622:29:4;;;;;;;;3595:56;;3697:1;3669:30;;:16;:30;;;;:60;;;;;3723:6;3703:26;;:16;:26;;;3669:60;3661:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3761:35;3770:6;3778:8;3788:7;3761:8;:35::i;:::-;2789:1014;;;;;;;;;:::o;1401:150:7:-;1498:7;1522:8;:15;1531:5;1522:15;;;;;;;;;;;;;;;:24;1538:7;1522:24;;;;;;;;;;;;;;;;1515:31;;1401:150;;;;:::o;752:25:4:-;;;;;;;;;;;;;:::o;6263:248:7:-;6374:1;6355:21;;:7;:21;;;;6347:30;;;;;;;;6412:1;6395:19;;:5;:19;;;;6387:28;;;;;;;;6453:5;6426:8;:15;6435:5;6426:15;;;;;;;;;;;;;;;:24;6442:7;6426:24;;;;;;;;;;;;;;;:32;;;;6489:7;6473:31;;6482:5;6473:31;;;6498:5;6473:31;;;;;;;;;;;;;;;;;;6263:248;;;:::o;1349:467:11:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;1349:467;;:::o;4660:277:7:-;4752:9;:15;4762:4;4752:15;;;;;;;;;;;;;;;;4743:5;:24;;4735:33;;;;;;;;4796:1;4782:16;;:2;:16;;;;4774:25;;;;;;;;4824:26;4844:5;4824:9;:15;4834:4;4824:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;4806:9;:15;4816:4;4806:15;;;;;;;;;;;;;;;:44;;;;4872:24;4890:5;4872:9;:13;4882:2;4872:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;4856:9;:13;4866:2;4856:13;;;;;;;;;;;;;;;:40;;;;4922:2;4907:25;;4916:4;4907:25;;;4926:5;4907:25;;;;;;;;;;;;;;;;;;4660:277;;;:::o;1079:131:6:-;1137:7;1173:9;1165:1;1160;:6;;1152:15;;;;;;;;1189:1;1185;:5;1173:17;;1204:1;1197:8;;1079:131;;;;;:::o;1273:::-;1331:7;1346:9;1362:1;1358;:5;1346:17;;1382:1;1377;:6;;1369:15;;;;;;;;1398:1;1391:8;;1273:131;;;;;:::o;5265:239:7:-;5347:1;5336:7;:12;;;;5328:21;;;;;;;;5370:24;5387:6;5370:12;;:16;;:24;;;;:::i;:::-;5355:12;:39;;;;5421:30;5444:6;5421:9;:18;5431:7;5421:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;5400:9;:18;5410:7;5400:18;;;;;;;;;;;;;;;:51;;;;5483:7;5462:37;;5479:1;5462:37;;;5492:6;5462:37;;;;;;;;;;;;;;;;;;5265:239;;:::o;5713:327:4:-;5819:1;5801:14;;:19;5793:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5896:11;5883:10;;:24;;;;;;;;;;;;;;;;;;6023:9;6019:2;:13;6008:7;:25;5991:14;:42;;;;5713:327;;:::o;364:139:10:-;472:5;:14;;;487:2;491:5;472:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;472:25:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;472:25:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;472:25:10;;;;;;;;;;;;;;;;464:34;;;;;;;;364:139;;;:::o;764:1042:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"./PropsTimeBasedTransfers.sol\";\nimport \"./ERC865Token.sol\";\nimport \"./PropsTokenDetailed.sol\";\n\n/**\n * @title PROPSToken\n * @dev PROPS token contract (based of ZEPToken by openzeppelin), a detailed ERC20 token\n * https://github.com/zeppelinos/zos-vouching/blob/master/contracts/ZEPToken.sol\n * PROPS are divisible by 1e18 base\n * units referred to as 'AttoPROPS'.\n *\n * PROPS are displayed using 18 decimal places of precision.\n *\n * 1 PROPS is equivalent to:\n *   1 * 1e18 == 1e18 == One Quintillion AttoPROPS\n *\n * 600 Million PROPS (total supply) is equivalent to:\n *   600000000 * 1e18 == 6e26 AttoPROPS\n *\n\n */\n\ncontract PropsToken is\n    Initializable,\n    ERC20Detailed,\n    ERC865Token,\n    PropsTimeBasedTransfers,\n    PropsTokenDetailed\n{\n    /**\n     * @dev Initializer function. Called only once when a proxy for the contract is created.\n     * @param _holder address that will receive its initial supply and be able to transfer before transfers start time\n     * @param _controller address that will have controller functionality on token\n     * @param _minter address that will have mint functionality on token\n     */\n    function initialize(\n        address _holder,\n        address _controller,\n        address _minter\n    ) public initializer {\n        uint8 decimals = 18;\n        // total supply is 600,000,000 PROPS specified in AttoPROPS\n        uint256 totalSupply = 0.6 * 1e9 * (10**uint256(decimals));\n\n        ERC20Detailed.initialize(\"Props Token\", \"PROPS\", decimals);\n        PropsTokenDetailed.initialize(_controller);\n        PropsTokenDetailed.initializePermitUpgrade(\"Props Token\");\n        _mint(_holder, totalSupply);\n    }\n}\n",
  "sourcePath": "/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsToken.sol",
  "ast": {
    "absolutePath": "/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsToken.sol",
    "exportedSymbols": {
      "PropsToken": [
        103
      ]
    },
    "id": 104,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 34,
        "nodeType": "ImportDirective",
        "scope": 104,
        "sourceUnit": 1352,
        "src": "26:45:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 104,
        "sourceUnit": 1165,
        "src": "72:66:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsTimeBasedTransfers.sol",
        "file": "./PropsTimeBasedTransfers.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 104,
        "sourceUnit": 32,
        "src": "139:39:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/ERC865Token.sol",
        "file": "./ERC865Token.sol",
        "id": 37,
        "nodeType": "ImportDirective",
        "scope": 104,
        "sourceUnit": 16,
        "src": "179:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsTokenDetailed.sol",
        "file": "./PropsTokenDetailed.sol",
        "id": 38,
        "nodeType": "ImportDirective",
        "scope": 104,
        "sourceUnit": 457,
        "src": "207:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 39,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1351,
              "src": "791:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$1351",
                "typeString": "contract Initializable"
              }
            },
            "id": 40,
            "nodeType": "InheritanceSpecifier",
            "src": "791:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 41,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1164,
              "src": "810:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1164",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "810:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 43,
              "name": "ERC865Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15,
              "src": "829:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC865Token_$15",
                "typeString": "contract ERC865Token"
              }
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "829:11:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 45,
              "name": "PropsTimeBasedTransfers",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31,
              "src": "846:23:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PropsTimeBasedTransfers_$31",
                "typeString": "contract PropsTimeBasedTransfers"
              }
            },
            "id": 46,
            "nodeType": "InheritanceSpecifier",
            "src": "846:23:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 47,
              "name": "PropsTokenDetailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 456,
              "src": "875:18:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PropsTokenDetailed_$456",
                "typeString": "contract PropsTokenDetailed"
              }
            },
            "id": 48,
            "nodeType": "InheritanceSpecifier",
            "src": "875:18:3"
          }
        ],
        "contractDependencies": [
          15,
          18,
          31,
          456,
          1097,
          1164,
          1233,
          1351
        ],
        "contractKind": "contract",
        "documentation": "@title PROPSToken\n@dev PROPS token contract (based of ZEPToken by openzeppelin), a detailed ERC20 token\nhttps://github.com/zeppelinos/zos-vouching/blob/master/contracts/ZEPToken.sol\nPROPS are divisible by 1e18 base\nunits referred to as 'AttoPROPS'.\n * PROPS are displayed using 18 decimal places of precision.\n * 1 PROPS is equivalent to:\n  1 * 1e18 == 1e18 == One Quintillion AttoPROPS\n * 600 Million PROPS (total supply) is equivalent to:\n  600000000 * 1e18 == 6e26 AttoPROPS\n\n ",
        "fullyImplemented": true,
        "id": 103,
        "linearizedBaseContracts": [
          103,
          456,
          31,
          15,
          18,
          1097,
          1164,
          1233,
          1351
        ],
        "name": "PropsToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1408:396:3",
              "statements": [
                {
                  "assignments": [
                    60
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60,
                      "name": "decimals",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "1418:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 59,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1418:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 62,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1435:2:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1418:19:3"
                },
                {
                  "assignments": [
                    64
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64,
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "1515:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1515:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_600000000_by_1",
                        "typeString": "int_const 600000000"
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "302e36",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1537:3:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_5",
                          "typeString": "rational_const 3 / 5"
                        },
                        "value": "0.6"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "316539",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:3:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1e9"
                      },
                      "src": "1537:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_600000000_by_1",
                        "typeString": "int_const 600000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1550:2:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 70,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "1562:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1554:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1554:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1550:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 73,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1549:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1537:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1515:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f707320546f6b656e",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1608:13:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc1293dc14d3554079e7b5475cd9e82b2b570be6ab0320d98d1adf48c388ae3b",
                          "typeString": "literal_string \"Props Token\""
                        },
                        "value": "Props Token"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50524f5053",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1623:7:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4a11413b471eca97bcf19e5d655e9b80f99f6af51ea832513db3f1c311a8fba",
                          "typeString": "literal_string \"PROPS\""
                        },
                        "value": "PROPS"
                      },
                      {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "1632:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dc1293dc14d3554079e7b5475cd9e82b2b570be6ab0320d98d1adf48c388ae3b",
                          "typeString": "literal_string \"Props Token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4a11413b471eca97bcf19e5d655e9b80f99f6af51ea832513db3f1c311a8fba",
                          "typeString": "literal_string \"PROPS\""
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "1583:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1164_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1135,
                      "src": "1583:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1583:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "_controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1681:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "PropsTokenDetailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "1651:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PropsTokenDetailed_$456_$",
                          "typeString": "type(contract PropsTokenDetailed)"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 175,
                      "src": "1651:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1651:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f707320546f6b656e",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1746:13:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc1293dc14d3554079e7b5475cd9e82b2b570be6ab0320d98d1adf48c388ae3b",
                          "typeString": "literal_string \"Props Token\""
                        },
                        "value": "Props Token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dc1293dc14d3554079e7b5475cd9e82b2b570be6ab0320d98d1adf48c388ae3b",
                          "typeString": "literal_string \"Props Token\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "PropsTokenDetailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "1703:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PropsTokenDetailed_$456_$",
                          "typeString": "type(contract PropsTokenDetailed)"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initializePermitUpgrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 220,
                      "src": "1703:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "_holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1776:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1785:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 96,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "1770:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1770:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1770:27:3"
                }
              ]
            },
            "documentation": "@dev Initializer function. Called only once when a proxy for the contract is created.\n@param _holder address that will receive its initial supply and be able to transfer before transfers start time\n@param _controller address that will have controller functionality on token\n@param _minter address that will have mint functionality on token",
            "id": 102,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 56,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1332,
                  "src": "1396:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1396:11:3"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "name": "_holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1313:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1338:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "_minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1367:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1303:85:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1408:0:3"
            },
            "scope": 103,
            "src": "1284:520:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 104,
        "src": "764:1042:3"
      }
    ],
    "src": "0:1807:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsToken.sol",
      "exportedSymbols": {
        "PropsToken": [
          103
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".24"
          ]
        },
        "id": 33,
        "name": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "attributes": {
          "SourceUnit": 1352,
          "absolutePath": "zos-lib/contracts/Initializable.sol",
          "file": "zos-lib/contracts/Initializable.sol",
          "scope": 104,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 34,
        "name": "ImportDirective",
        "src": "26:45:3"
      },
      {
        "attributes": {
          "SourceUnit": 1165,
          "absolutePath": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "file": "openzeppelin-eth/contracts/token/ERC20/ERC20Detailed.sol",
          "scope": 104,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 35,
        "name": "ImportDirective",
        "src": "72:66:3"
      },
      {
        "attributes": {
          "SourceUnit": 32,
          "absolutePath": "/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsTimeBasedTransfers.sol",
          "file": "./PropsTimeBasedTransfers.sol",
          "scope": 104,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 36,
        "name": "ImportDirective",
        "src": "139:39:3"
      },
      {
        "attributes": {
          "SourceUnit": 16,
          "absolutePath": "/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/ERC865Token.sol",
          "file": "./ERC865Token.sol",
          "scope": 104,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 37,
        "name": "ImportDirective",
        "src": "179:27:3"
      },
      {
        "attributes": {
          "SourceUnit": 457,
          "absolutePath": "/home/george/Development/props/props-protocol/props-token-distribution/contracts/token/PropsTokenDetailed.sol",
          "file": "./PropsTokenDetailed.sol",
          "scope": 104,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 38,
        "name": "ImportDirective",
        "src": "207:34:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            15,
            18,
            31,
            456,
            1097,
            1164,
            1233,
            1351
          ],
          "contractKind": "contract",
          "documentation": "@title PROPSToken\n@dev PROPS token contract (based of ZEPToken by openzeppelin), a detailed ERC20 token\nhttps://github.com/zeppelinos/zos-vouching/blob/master/contracts/ZEPToken.sol\nPROPS are divisible by 1e18 base\nunits referred to as 'AttoPROPS'.\n * PROPS are displayed using 18 decimal places of precision.\n * 1 PROPS is equivalent to:\n  1 * 1e18 == 1e18 == One Quintillion AttoPROPS\n * 600 Million PROPS (total supply) is equivalent to:\n  600000000 * 1e18 == 6e26 AttoPROPS\n\n ",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            103,
            456,
            31,
            15,
            18,
            1097,
            1164,
            1233,
            1351
          ],
          "name": "PropsToken",
          "scope": 104
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Initializable",
                  "referencedDeclaration": 1351,
                  "type": "contract Initializable"
                },
                "id": 39,
                "name": "UserDefinedTypeName",
                "src": "791:13:3"
              }
            ],
            "id": 40,
            "name": "InheritanceSpecifier",
            "src": "791:13:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Detailed",
                  "referencedDeclaration": 1164,
                  "type": "contract ERC20Detailed"
                },
                "id": 41,
                "name": "UserDefinedTypeName",
                "src": "810:13:3"
              }
            ],
            "id": 42,
            "name": "InheritanceSpecifier",
            "src": "810:13:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC865Token",
                  "referencedDeclaration": 15,
                  "type": "contract ERC865Token"
                },
                "id": 43,
                "name": "UserDefinedTypeName",
                "src": "829:11:3"
              }
            ],
            "id": 44,
            "name": "InheritanceSpecifier",
            "src": "829:11:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "PropsTimeBasedTransfers",
                  "referencedDeclaration": 31,
                  "type": "contract PropsTimeBasedTransfers"
                },
                "id": 45,
                "name": "UserDefinedTypeName",
                "src": "846:23:3"
              }
            ],
            "id": 46,
            "name": "InheritanceSpecifier",
            "src": "846:23:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "PropsTokenDetailed",
                  "referencedDeclaration": 456,
                  "type": "contract PropsTokenDetailed"
                },
                "id": 47,
                "name": "UserDefinedTypeName",
                "src": "875:18:3"
              }
            ],
            "id": 48,
            "name": "InheritanceSpecifier",
            "src": "875:18:3"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@dev Initializer function. Called only once when a proxy for the contract is created.\n@param _holder address that will receive its initial supply and be able to transfer before transfers start time\n@param _controller address that will have controller functionality on token\n@param _minter address that will have mint functionality on token",
              "implemented": true,
              "isConstructor": false,
              "name": "initialize",
              "payable": false,
              "scope": 103,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_holder",
                      "scope": 102,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 49,
                        "name": "ElementaryTypeName",
                        "src": "1313:7:3"
                      }
                    ],
                    "id": 50,
                    "name": "VariableDeclaration",
                    "src": "1313:15:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_controller",
                      "scope": 102,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 51,
                        "name": "ElementaryTypeName",
                        "src": "1338:7:3"
                      }
                    ],
                    "id": 52,
                    "name": "VariableDeclaration",
                    "src": "1338:19:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_minter",
                      "scope": 102,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 53,
                        "name": "ElementaryTypeName",
                        "src": "1367:7:3"
                      }
                    ],
                    "id": 54,
                    "name": "VariableDeclaration",
                    "src": "1367:15:3"
                  }
                ],
                "id": 55,
                "name": "ParameterList",
                "src": "1303:85:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 58,
                "name": "ParameterList",
                "src": "1408:0:3"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1332,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 56,
                    "name": "Identifier",
                    "src": "1396:11:3"
                  }
                ],
                "id": 57,
                "name": "ModifierInvocation",
                "src": "1396:11:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        60
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "decimals",
                          "scope": 102,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint8",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint8",
                              "type": "uint8"
                            },
                            "id": 59,
                            "name": "ElementaryTypeName",
                            "src": "1418:5:3"
                          }
                        ],
                        "id": 60,
                        "name": "VariableDeclaration",
                        "src": "1418:14:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "3138",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 18",
                          "value": "18"
                        },
                        "id": 61,
                        "name": "Literal",
                        "src": "1435:2:3"
                      }
                    ],
                    "id": 62,
                    "name": "VariableDeclarationStatement",
                    "src": "1418:19:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        64
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "totalSupply",
                          "scope": 102,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 63,
                            "name": "ElementaryTypeName",
                            "src": "1515:7:3"
                          }
                        ],
                        "id": 64,
                        "name": "VariableDeclaration",
                        "src": "1515:19:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "*",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_600000000_by_1",
                                "typeString": "int_const 600000000"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "int_const 600000000"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "302e36",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "rational_const 3 / 5",
                                  "value": "0.6"
                                },
                                "id": 65,
                                "name": "Literal",
                                "src": "1537:3:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "316539",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1000000000",
                                  "value": "1e9"
                                },
                                "id": 66,
                                "name": "Literal",
                                "src": "1543:3:3"
                              }
                            ],
                            "id": 67,
                            "name": "BinaryOperation",
                            "src": "1537:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "**",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "3130",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 10",
                                      "value": "10"
                                    },
                                    "id": 68,
                                    "name": "Literal",
                                    "src": "1550:2:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)",
                                          "value": "uint256"
                                        },
                                        "id": 69,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1554:7:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 60,
                                          "type": "uint8",
                                          "value": "decimals"
                                        },
                                        "id": 70,
                                        "name": "Identifier",
                                        "src": "1562:8:3"
                                      }
                                    ],
                                    "id": 71,
                                    "name": "FunctionCall",
                                    "src": "1554:17:3"
                                  }
                                ],
                                "id": 72,
                                "name": "BinaryOperation",
                                "src": "1550:21:3"
                              }
                            ],
                            "id": 73,
                            "name": "TupleExpression",
                            "src": "1549:23:3"
                          }
                        ],
                        "id": 74,
                        "name": "BinaryOperation",
                        "src": "1537:35:3"
                      }
                    ],
                    "id": 75,
                    "name": "VariableDeclarationStatement",
                    "src": "1515:57:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_dc1293dc14d3554079e7b5475cd9e82b2b570be6ab0320d98d1adf48c388ae3b",
                                  "typeString": "literal_string \"Props Token\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d4a11413b471eca97bcf19e5d655e9b80f99f6af51ea832513db3f1c311a8fba",
                                  "typeString": "literal_string \"PROPS\""
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "initialize",
                              "referencedDeclaration": 1135,
                              "type": "function (string memory,string memory,uint8)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1164,
                                  "type": "type(contract ERC20Detailed)",
                                  "value": "ERC20Detailed"
                                },
                                "id": 76,
                                "name": "Identifier",
                                "src": "1583:13:3"
                              }
                            ],
                            "id": 78,
                            "name": "MemberAccess",
                            "src": "1583:24:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f707320546f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Props Token\"",
                              "value": "Props Token"
                            },
                            "id": 79,
                            "name": "Literal",
                            "src": "1608:13:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50524f5053",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"PROPS\"",
                              "value": "PROPS"
                            },
                            "id": 80,
                            "name": "Literal",
                            "src": "1623:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 60,
                              "type": "uint8",
                              "value": "decimals"
                            },
                            "id": 81,
                            "name": "Identifier",
                            "src": "1632:8:3"
                          }
                        ],
                        "id": 82,
                        "name": "FunctionCall",
                        "src": "1583:58:3"
                      }
                    ],
                    "id": 83,
                    "name": "ExpressionStatement",
                    "src": "1583:58:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "initialize",
                              "referencedDeclaration": 175,
                              "type": "function (address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 456,
                                  "type": "type(contract PropsTokenDetailed)",
                                  "value": "PropsTokenDetailed"
                                },
                                "id": 84,
                                "name": "Identifier",
                                "src": "1651:18:3"
                              }
                            ],
                            "id": 86,
                            "name": "MemberAccess",
                            "src": "1651:29:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 52,
                              "type": "address",
                              "value": "_controller"
                            },
                            "id": 87,
                            "name": "Identifier",
                            "src": "1681:11:3"
                          }
                        ],
                        "id": 88,
                        "name": "FunctionCall",
                        "src": "1651:42:3"
                      }
                    ],
                    "id": 89,
                    "name": "ExpressionStatement",
                    "src": "1651:42:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_dc1293dc14d3554079e7b5475cd9e82b2b570be6ab0320d98d1adf48c388ae3b",
                                  "typeString": "literal_string \"Props Token\""
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "initializePermitUpgrade",
                              "referencedDeclaration": 220,
                              "type": "function (string memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 456,
                                  "type": "type(contract PropsTokenDetailed)",
                                  "value": "PropsTokenDetailed"
                                },
                                "id": 90,
                                "name": "Identifier",
                                "src": "1703:18:3"
                              }
                            ],
                            "id": 92,
                            "name": "MemberAccess",
                            "src": "1703:42:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f707320546f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Props Token\"",
                              "value": "Props Token"
                            },
                            "id": 93,
                            "name": "Literal",
                            "src": "1746:13:3"
                          }
                        ],
                        "id": 94,
                        "name": "FunctionCall",
                        "src": "1703:57:3"
                      }
                    ],
                    "id": 95,
                    "name": "ExpressionStatement",
                    "src": "1703:57:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 976,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 96,
                            "name": "Identifier",
                            "src": "1770:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50,
                              "type": "address",
                              "value": "_holder"
                            },
                            "id": 97,
                            "name": "Identifier",
                            "src": "1776:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 64,
                              "type": "uint256",
                              "value": "totalSupply"
                            },
                            "id": 98,
                            "name": "Identifier",
                            "src": "1785:11:3"
                          }
                        ],
                        "id": 99,
                        "name": "FunctionCall",
                        "src": "1770:27:3"
                      }
                    ],
                    "id": 100,
                    "name": "ExpressionStatement",
                    "src": "1770:27:3"
                  }
                ],
                "id": 101,
                "name": "Block",
                "src": "1408:396:3"
              }
            ],
            "id": 102,
            "name": "FunctionDefinition",
            "src": "1284:520:3"
          }
        ],
        "id": 103,
        "name": "ContractDefinition",
        "src": "764:1042:3"
      }
    ],
    "id": 104,
    "name": "SourceUnit",
    "src": "0:1807:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "4": {
      "links": {},
      "events": {},
      "address": "0x816ca490BEb0eF22C4e2375c9a2E141948717Db3",
      "updated_at": 1608128700117
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-05T14:20:11.913Z",
  "devdoc": {
    "methods": {
      "addMinter(address)": {
        "details": "Allows the controller/owner to update to new minter",
        "params": {
          "_minter": "address address of the new minter"
        }
      },
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "initialize(address)": {
        "details": "The initializer function for upgrade as initialize was already called, get the decimals used in the token to initialize the params",
        "params": {
          "_controller": "address that will have controller functionality on token"
        }
      },
      "initialize(address,address,address)": {
        "details": "Initializer function. Called only once when a proxy for the contract is created.",
        "params": {
          "_controller": "address that will have controller functionality on token",
          "_holder": "address that will receive its initial supply and be able to transfer before transfers start time",
          "_minter": "address that will have mint functionality on token"
        }
      },
      "initializePermitUpgrade(string)": {
        "details": "Initialize post separation of rewards contract upgrade",
        "params": {
          "_tokenName": "string token name"
        }
      },
      "mint(address,uint256)": {
        "details": "Allows the minter to mint tokens to a given address",
        "params": {
          "_account": "address of the receiving account",
          "_amount": "uint256 how much to mint"
        }
      },
      "name()": {
        "return": "the name of the token."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Allows for approvals to be made via secp256k1 signatures",
        "params": {
          "_amount": "uint spender",
          "_deadline": "uint spender",
          "_owner": "address owner",
          "_r": "bytes32 spender",
          "_s": "bytes32 spender",
          "_spender": "address spender",
          "_v": "uint8 spender"
        }
      },
      "reclaimToken(address,address,uint256)": {
        "details": "Reclaim all ERC20 compatible tokens",
        "params": {
          "_token": "ERC20 The address of the token contract"
        }
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "updateController(address)": {
        "details": "Allows the controller/owner to update to a new controller",
        "params": {
          "_controller": "address address of the new controller"
        }
      }
    },
    "title": "PROPSToken"
  },
  "userdoc": {
    "methods": {}
  }
}